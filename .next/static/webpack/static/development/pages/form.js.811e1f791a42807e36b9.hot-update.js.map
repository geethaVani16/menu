{"version":3,"file":"static/webpack/static/development/pages/form.js.811e1f791a42807e36b9.hot-update.js","sources":["webpack:///./pages/form.js"],"sourcesContent":["import React, { Component } from 'react'\nimport '../styles/styles.scss'\nimport axios from 'axios'\n\nexport default class Form extends Component {\n    state = {\n        years: [],\n        currentYear: new Date().getUTCFullYear(),\n        currentMonth: new Date().toDateString().split(' ')[1],\n        currentDay: new Date().getDate(),\n        currentLocation:{},\n        months: [\n            { id: 1, month: 'Jan' },\n            { id: 2, month: 'feb' },\n            { id: 3, month: 'Mar' },\n            { id: 4, month: 'Apr' },\n            { id: 5, month: 'May' },\n            { id: 6, month: 'June' },\n            { id: 7, month: 'July' },\n            { id: 8, month: 'Aug' },\n            { id: 9, month: 'Sept' },\n            { id: 10, month: 'Oct' },\n            { id: 11, month: 'Nov' },\n            { id: 12, month: 'Dec' },\n\n        ],\n        days: []\n    }\n    handleMonthChange = (e) => {\n        console.log(e.target.value)\n        var d = new Date();\n        var year = d.getUTCFullYear(); //current year 2019\n        var month = d.getUTCMonth() + 1; //current month in form of number\n        if ((year % 100 != 0) && (year % 4 == 0) || (year % 400 == 0)) // tells where it is leap year or not\n        {\n            var febDays = 29;\n        }\n        else {\n            var febDays = 28;\n        }\n        var daysOfMonth = [31, febDays, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        let selectedMonth = e.target.value\n        let monthDates = []\n        for (let i = 0; i <= daysOfMonth[selectedMonth - 1]; i++) {\n            monthDates.push(i)\n        }\n        this.setState(() => ({ days: monthDates }))\n\n    }\n\n    handleLocationChange = (e) => {\n        const enteredCurrentLocation=e.target.value\n        // console.log(enteredCurrentLocation,'enteredlocation')\n        this.setState(()=>({currentLocation: enteredCurrentLocation}))\n    }\n    componentWillMount() {\n        let years = []\n        let output = 0\n        for (let i = 0; i < 200; i++) {\n            output = 1901 + i\n            years.push(output)\n        }\n        this.setState(() => ({ years: years }))\n\n        axios.get('https://mytempletour.com/api/ipdata')\n        .then (response => axios.get(`https://api.ipdata.co/${response.data}?api-key=d489ad57d4edb57b484e01061037935c40a49bedfbcbf01f5aa85271`))\n        .then(response => {\n            console.log(response.data,'res.data')\n            this.setState(() => ({currentLocation:response.data}))\n        })\n        .catch(err => console.log(err))\n    }\n\n    render() {\n        //    console.log( this.state)\n        return (\n\n\n\n            <form className='panchanga-form'>\n\n                <div className='date-wrapper'>\n\n                    <div className='row each-item'>\n                        <div className='col-md-3 col-sm-3 col-lg-3 form-heading'>\n                            <span >Date</span>\n                        </div>\n                        <div className='col-md-9 col-sm-9 col-lg-9 '>\n\n                            <div className='query-item'>\n\n                                <span >\n\n                                    <select className='select-items form-control'>\n                                        <option value=''>{this.state.currentYear}</option>\n                                        {this.state.years.map(year => {\n                                            return <option key={year}>{year}</option>\n                                        })}\n                                    </select>\n\n                                </span>\n\n                                <span >\n                                    <select onChange={this.handleMonthChange} className='form-control select-items'>\n                                        <option value=''>{this.state.currentMonth}</option>\n                                        {this.state.months.map(month => {\n                                            return <option key={month.id} value={month.id}>{month.month}</option>\n                                        })}\n                                    </select>\n\n                                </span>\n                                <span>\n\n                                    <select className='select-items form-control' >\n                                        <option value=''>{this.state.currentDay}</option>\n                                        {this.state.days.map(day => {\n                                            return <option key={day}>{day}</option>\n                                        })}\n                                    </select>\n\n                                </span>\n\n                            </div>\n\n                        </div>\n\n\n\n                    </div>\n\n                </div>\n                <div className='row each-item'>\n                    <div className='col-md-3 col-sm-3 col-lg-3 form-heading'>\n\n                        <span>Location</span>\n\n                    </div>\n\n                    <div className='col-md-9 col-sm-9 col-lg-9'>\n\n                        <div className='query-item'>\n                                <div>\n                                    <label>\n\n                                        <input type='text' \n                                            value={this.state.currentLocation.city} \n                                            onChange={this.handleLocationChange}\n                                            className='form-control' \n                                        />\n\n                                    </label>\n                                </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='row each-item'>\n                    <div className='col-md-3 col-sm-3 col-lg-3 form-heading'>\n\n                        <span>Current Location</span>\n\n                    </div>\n\n                    <div className='col-md-9 col-sm-9 col-lg-9 location-items-wrapper'>\n\n                        <div className='query-item'>\n                                <div className='location-details'>\n                                        <span >{ this.state.currentLocation.emoji_flag}</span>\n                                        <span >{ this.state.currentLocation.city}</span>\n                                        <span >{ this.state.currentLocation.region}</span>\n                                        <span >{ this.state.currentLocation.country_name}</span>\n                                </div>\n                        </div>\n                    </div>\n                </div>\n                \n                <div className='row each-item'>\n                    <div className='col-md-3 col-sm-3 col-lg-3 form-heading'>\n\n                        <span>Latitude</span>\n\n                    </div>\n\n                    <div className='col-md-9 col-sm-9 col-lg-9 location-items-wrapper'>\n\n                        <div className='query-item'>\n                                <div className='location-details'>\n                                        <span >{ this.state.currentLocation.emoji_flag}</span>\n                                        <span >{ this.state.currentLocation.city}</span>\n                                        <span >{ this.state.currentLocation.region}</span>\n                                        <span >{ this.state.currentLocation.country_name}</span>\n                                </div>\n                        </div>\n                    </div>\n                </div>\n\n\n\n\n\n\n            </form>\n\n\n\n\n\n        )\n\n\n    }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AArBA;AACA;AAsBA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;;;AAEA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAcoBA;;;;AA9MA;AACA;;;;;A","sourceRoot":""}