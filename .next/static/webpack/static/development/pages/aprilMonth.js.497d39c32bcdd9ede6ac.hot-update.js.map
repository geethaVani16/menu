{"version":3,"file":"static/webpack/static/development/pages/aprilMonth.js.497d39c32bcdd9ede6ac.hot-update.js","sources":["webpack:///./pages/Location_search.js"],"sourcesContent":["import React from 'react';\n\nimport PlacesAutocomplete, { geocodeByAddress,geocodeByPlaceId, getLatLng} from 'react-places-autocomplete';\n// import '../styles/styles.scss'\n\nconst selectPlace={\n    color:\"#212529\",\n    position: \"absolute\",\n    zIndex:10,\n    width:\"90%\",\n    opacity: 0.6,\n    fontSize:15,\n    lineHeight:2\n}\n\nclass LocationSearchInput extends React.Component {\n    \n    constructor(props) {\n        super(props)\n        this.state = {\n            address: '',\n            latLng:[]\n        }\n    }\n\n    handleSelectPlaceChange = () => {\n        const address=this.state\n        console.log(address,'address')\n       \n\n    }\n    handleChange = (address) => {\n        this.setState({ address })\n    }\n     \n      handleSelect = (address) => {\n        //   console.log(address)\n        geocodeByAddress(address)\n          .then(results =>  getLatLng(results[0]))\n            .then(latLng => console.log('Success', latLng))\n            .catch(error => console.error('Error1', error));\n            //   this.props.handleChange(this.state)\n      }\n      \n\n    render() {\n        // console.log(this.props,'props in location')\n       \n        // console.log(this.state.address,'address')\n        return (\n\n            <div>\n                \n                <PlacesAutocomplete\n                className=' date-picker upPad-width'\n                value={this.state.address}\n                onChange={this.handleChange}\n                onSelect={this.handleSelect}\n                // handleSelectPlaceChange={this.handleSelectPlaceChange()}\n\n                >\n                {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                    <div>\n                        <input\n                            {...getInputProps({\n                                placeholder: 'Search place name',\n                                className: 'location-search-input form-control',\n                            })}\n                        />\n                      \n\n                       <div className=\"autocomplete-dropdown-container\" style={selectPlace}>\n                            {loading && <div>Loading...</div>}\n                            {suggestions.map(suggestion => {\n                                const className = suggestion.active\n                                    ? 'suggestion-item--active'\n                                    : 'suggestion-item';\n                                // inline style for demonstration purpose\n                                const style = suggestion.active\n                                    ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                                    : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                                return (\n                                    <div\n                                        {...getSuggestionItemProps(suggestion, {\n                                            className,\n                                            style,\n                                        })}\n                                    >\n                                        <span>{suggestion.description}</span>\n                                    </div>\n                                );\n                            })}\n                        </div>\n\n                       \n\n\n                    </div>\n                )}\n            </PlacesAutocomplete>\n            </div>\n        )\n    }\n}\nexport default LocationSearchInput"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AASA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AASA;AACA;AAGA;AACA;AAdA;AAeA;AAAA;AAAA;AACA;AACA;AAjBA;AAmBA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAxBA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AAqBA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AA9BA;AAyCA;;;;AAvFA;AACA;AAwFA;;;;A","sourceRoot":""}